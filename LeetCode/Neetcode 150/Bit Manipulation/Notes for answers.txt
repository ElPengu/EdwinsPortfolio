Notes for answers

Q: "
What is the concept behind the solution to the following problem: 
"
A: "

"


Q: "
Write the code statement to set digit to x mod 10 when x may be negative
"
A: "
digit = int(math.fmod(x,10))
"

Q: "
Explain why you should use "int(math.fmod(x,10))" instead of the '%' operator when x might be negative
"
A: "
- You should do so because Python thinks that -1 % 10 = 9
"

Q: "
Write the code statement to set x to x floor divide 10, where x may be negative
"
A: "
x = int(x/10)
"

Q: "
Explain why you should use "x = int(x/10)" instead of the '//' operator when x might be negative
"
A: "
- You should do so because Python thinks that -1//10 = -1
"

Q: "
What is the concept behind the solution to the following problem: You are given a signed 32-bit integer x. Return x after reversing each of its digits. After reversing, if x goes outside the signed 32-bit integer range [-2^31, 2^31 - 1], then return 0 instead. Solve the problem without using integers that are outside the signed 32-bit integer range. <- Reverse Integer (Medium)
"
A: "
- You are given a signed 32-bit integer x
- Return x after reversing each of its digits
- After reversing, if x goes outside the signed 32-bit integer range [-2^31,2^31 -1] then return 0 instead
- Solve the problem without using integers that are outside the signed 32-bit integer range

- Problems
- Reversing any integer
- Only using integers within the signed 32-bit integer range WITHOUT building the number
        
- Reversing any integer
- Take x and mod it by 10, this gets remainder r
- Add r to res
- Floor divide x by 10
- If x remains, then multiply res by 10
- Repeat, but now ADD r to res

- Only using integers within the signed 32-bit integer range WITHOUT building the number
- We explicitly look at our max and min
- MAX =  2147483647
- MIN = -2147483648
- MAX and MIN have 10 digits
- As we build our reverse, we will keep on adding digits
- Once we hit 9 digits in res, we must make some checks before adding the next digit
- We check how res relates to MAX//10 and MIN//10
- If we see that res > MAX//10 or res < MIN//10 then we certainly cannot add another digit
- If we see that res == MAX//10 or res == MIN//10 then check if digit >= MAX%10 or digit <= MIN%10 respectively
-> We certainly cannot add another digit in this case!
"

